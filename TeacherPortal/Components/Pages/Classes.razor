@page "/classes"
@rendermode InteractiveServer
@using TeacherPortal.Models
@using TeacherPortal.Services
@inject ClassService ClassService

<PageTitle>My Classes</PageTitle>

<div class="classes-container">
    <div class="header-section">
        <h1 class="page-title">ðŸ“š My Classes</h1>
        <div class="day-filter">
            <label for="day-select">Filter by day:</label>
            <select id="day-select" class="form-select" @bind="selectedDay" @bind:after="FilterClasses">
                <option value="">All Days</option>
                <option value="Monday">Monday</option>
                <option value="Tuesday">Tuesday</option>
                <option value="Wednesday">Wednesday</option>
                <option value="Thursday">Thursday</option>
                <option value="Friday">Friday</option>
            </select>
        </div>
    </div>

    <div class="stats-summary">
        <div class="stat-card">
            <div class="stat-icon">ðŸ“–</div>
            <div class="stat-content">
                <div class="stat-value">@displayedClasses.Count</div>
                <div class="stat-label">@(string.IsNullOrEmpty(selectedDay) ? "Total Classes" : selectedDay + " Classes")</div>
            </div>
        </div>
        <div class="stat-card stat-sessions">
            <div class="stat-icon">ðŸ•’</div>
            <div class="stat-content">
                <div class="stat-value">@displayedClasses.Sum(c => c.Sessions.Count)</div>
                <div class="stat-label">Total Sessions</div>
            </div>
        </div>
    </div>

    <div class="classes-grid">
        @foreach (var cls in displayedClasses)
        {
            <div class="class-card">
                <div class="class-header">
                    <h3 class="class-name">@cls.ClassName</h3>
                    <span class="room-badge">@cls.RoomNumber</span>
                </div>
                <div class="class-subject">@cls.Subject</div>
                
                <div class="sessions-list">
                    <h4 class="sessions-title">Sessions:</h4>
                    @foreach (var session in cls.Sessions)
                    {
                        <div class="session-item">
                            <div class="session-info">
                                <span class="session-name">@session.SessionName</span>
                                <span class="session-time">ðŸ•’ @session.TimeSlot</span>
                                <span class="session-days">ðŸ“… @session.DaysDisplay</span>
                            </div>
                            <a href="/attendance?sessionId=@session.Id" class="btn btn-primary btn-sm">Take Attendance</a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    @if (displayedClasses.Count == 0)
    {
        <div class="empty-state">
            <div class="empty-icon">ðŸ“­</div>
            <h3>No classes found</h3>
            <p>@(string.IsNullOrEmpty(selectedDay) ? "You don't have any classes scheduled." : $"You don't have any classes on {selectedDay}.")</p>
        </div>
    }
</div>

@code {
    private List<Class> allClasses = new();
    private List<Class> displayedClasses = new();
    private string selectedDay = string.Empty;

    protected override void OnInitialized()
    {
        LoadClasses();
    }

    private void LoadClasses()
    {
        allClasses = ClassService.GetAllClasses();
        displayedClasses = allClasses;
    }

    private void FilterClasses()
    {
        if (string.IsNullOrEmpty(selectedDay))
        {
            displayedClasses = allClasses;
        }
        else
        {
            if (Enum.TryParse<DayOfWeek>(selectedDay, out var day))
            {
                displayedClasses = allClasses
                    .Where(c => c.Sessions.Any(s => s.DaysOfWeek.Contains(day)))
                    .ToList();
            }
        }
    }
}
